/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.8 at Tue Jun 20 13:56:26 2023. */

#ifndef PB_AELF_MESSAGE_PB_H_INCLUDED
#define PB_AELF_MESSAGE_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _aelf_Address {
    pb_callback_t value;
/* @@protoc_insertion_point(struct:aelf_Address) */
} aelf_Address;

typedef struct _aelf_Transaction {
    aelf_Address from;
    aelf_Address to;
    int64_t ref_block_number;
    pb_callback_t ref_block_prefix;
    pb_callback_t method_name;
    pb_callback_t params;
    pb_callback_t signature;
/* @@protoc_insertion_point(struct:aelf_Transaction) */
} aelf_Transaction;

typedef struct _aelf_TransferInput {
    aelf_Address to;
    pb_callback_t symbol;
    int64_t amount;
    pb_callback_t memo;
/* @@protoc_insertion_point(struct:aelf_TransferInput) */
} aelf_TransferInput;

/* Default values for struct fields */

/* Initializer values for message structs */
#define aelf_Transaction_init_default            {aelf_Address_init_default, aelf_Address_init_default, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define aelf_Address_init_default                {{{NULL}, NULL}}
#define aelf_TransferInput_init_default          {aelf_Address_init_default, {{NULL}, NULL}, 0, {{NULL}, NULL}}
#define aelf_Transaction_init_zero               {aelf_Address_init_zero, aelf_Address_init_zero, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define aelf_Address_init_zero                   {{{NULL}, NULL}}
#define aelf_TransferInput_init_zero             {aelf_Address_init_zero, {{NULL}, NULL}, 0, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define aelf_Address_value_tag                   1
#define aelf_Transaction_from_tag                1
#define aelf_Transaction_to_tag                  2
#define aelf_Transaction_ref_block_number_tag    3
#define aelf_Transaction_ref_block_prefix_tag    4
#define aelf_Transaction_method_name_tag         5
#define aelf_Transaction_params_tag              6
#define aelf_Transaction_signature_tag           10000
#define aelf_TransferInput_to_tag                1
#define aelf_TransferInput_symbol_tag            2
#define aelf_TransferInput_amount_tag            3
#define aelf_TransferInput_memo_tag              4

/* Struct field encoding specification for nanopb */
extern const pb_field_t aelf_Transaction_fields[8];
extern const pb_field_t aelf_Address_fields[2];
extern const pb_field_t aelf_TransferInput_fields[5];

/* Maximum encoded size of messages (where known) */
/* aelf_Transaction_size depends on runtime parameters */
/* aelf_Address_size depends on runtime parameters */
/* aelf_TransferInput_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MESSAGE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
